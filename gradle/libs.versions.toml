[versions]
# Kotlin
kotlin = "1.8.10"
coroutines = "1.6.4"
ksp = "1.8.0-1.0.8"
serialization = "1.4.1"
collections_immutable = "0.3.5"

# decompose
decompose = "1.0.0"

# AndroidX
activity = "1.7.0"
appcompat = "1.6.1"
constraintlayout = "2.1.4"
core = "1.10.0"
datastore = "1.0.0"
fragment = "1.5.6"
lifecycle = "2.6.1"
paging = "3.1.1"
room = "2.5.1"
vectordrawable = "1.2.0-beta01"
workmanager = "2.8.1"

# Compose
compose_bom = "2023.03.00"
compose = "1.2.1"
material3 = "1.1.0-beta01"
compose_compiler = "1.4.4" # Don`t forget change field in Version.kt in buildSrc
compose_paging = "1.0.0-alpha18"

# Google
material = "1.8.0"
accompanist = "0.30.0"

# Test
junit = "4.13.2"
test_core = "1.5.0"
test_rules = "1.5.0"
test_junit = "1.1.5"
test_runner = "1.5.2"
truth = "1.0.1"
benchmark_junit = "1.1.1"
kakaocup = "0.0.2"
espresso = "3.5.1"

#
gradle = "7.4.2" # Don`t forget update in buildSrc

hyperion = "0.9.31"
subsampling = "3.10.0"
timber = "5.0.1"

# For Internet
jsoup = "1.15.2"
gson = "2.10"
okio = "3.2.0"
okhttp = "4.10.0"
ktor = "2.1.1"

graphfity = "1.0.0"
detekt = "1.21.0"

[libraries]
# Gradle Plugins
gradlePlugin_kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradlePlugin_android = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
gradlePlugin_graphfity = { module = "com.github.ivancarras:graphfity-plugin", version.ref = "graphfity" }

# Kotlin
stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
coroutines_core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines_android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
collections_immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "collections_immutable" }

# decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions = { module = "com.arkivanov.decompose:extensions-compose-jetpack", version.ref = "decompose" }

# Room
room_runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room_compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room_ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
room_paging = { module = "androidx.room:room-paging", version.ref = "room" }

# Lifecycle
lifecycle_viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle_runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle_livedata = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle_common = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
lifecycle_service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "lifecycle" }

# Work Manager
work_runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
work_gcm = { module = "androidx.work:work-gcm", version.ref = "workmanager" }
work_multiprocess = { module = "androidx.work:work-multiprocess", version.ref = "workmanager" }

# Main Android
core = { module = "androidx.core:core-ktx", version.ref = "core" }
activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
vectordrawable = { module = "androidx.vectordrawable:vectordrawable", version.ref = "vectordrawable" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
paging = { module = "androidx.paging:paging-common-ktx", version.ref = "paging" }
material = { module = "com.google.android.material:material", version.ref = "material" }

subsampling = { module = "com.davemorrissey.labs:subsampling-scale-image-view-androidx", version.ref = "subsampling" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

# Accompanist
flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "accompanist" }
permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
webview = { module = "com.google.accompanist:accompanist-webview", version.ref = "accompanist" }

datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

# For Internet
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp_loging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
ktor_core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor_okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor_logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor_res = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor_auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor_content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor_json = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }

# Compose
compose_bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose_bom" }
compose_ui = { group = "androidx.compose.ui", name = "ui" }
compose_ui_tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose_ui_tooling_preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose_runtime = { group = "androidx.compose.runtime", name = "runtime" }
compose_animation = { group = "androidx.compose.animation", name = "animation" }
compose_foundation = { group = "androidx.compose.foundation", name = "foundation" }
compose_foundation_layout = { group = "androidx.compose.foundation", name = "foundation-layout" }
compose_material = { group = "androidx.compose.material", name = "material" }
compose_material_icons = { group = "androidx.compose.material", name = "material-icons-core" }
compose_material_icons_ext = { group = "androidx.compose.material", name = "material-icons-extended" }
compose_paging = { module = "androidx.paging:paging-compose", version.ref = "compose_paging" }
compose_material3 = { module = "androidx.compose.material3:material3", version.ref = "material3" }

hyperion-core = { module = "com.willowtreeapps.hyperion:hyperion-core", version.ref = "hyperion" }
hyperion-crash = { module = "com.willowtreeapps.hyperion:hyperion-crash", version.ref = "hyperion" }

# Tests
junit = { module = "junit:junit", version.ref = "junit" }
test_core = { module = "androidx.test:core-ktx", version.ref = "test_core" }
test_rules = { module = "androidx.test:rules", version.ref = "test_rules" }
test_junit = { module = "androidx.test.ext:junit-ktx", version.ref = "test_junit" }
test_runner = { module = "androidx.test:runner", version.ref = "test_runner" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
benchmark_junit = { module = "androidx.benchmark:benchmark-junit4", version.ref = "benchmark_junit" }
compose_junit = { group = "androidx.compose.ui", name = "ui-test-junit4" }
compose_manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
kakaocup = { module = "io.github.kakaocup:compose", version.ref = "kakaocup" }
espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }

[bundles]
coroutines = ["coroutines_core", "coroutines_android"]
room = ["room_ktx", "room_paging"]
compose = ["compose_ui", "compose_ui_tooling", "compose_ui_tooling_preview", "compose_runtime", "compose_animation", "compose_foundation", "compose_foundation_layout", "compose_material", "compose_material_icons", "compose_material_icons_ext", "compose_material3"]
accompanist = ["flowlayout", "permissions", "systemuicontroller", "webview"]
work = ["work_runtime", "work_gcm", "work_multiprocess"]
hyper = ["hyperion-core", "hyperion-crash"]
tests = ["test_core", "test_rules", "test_junit", "test_runner", "compose_junit", "kakaocup", "espresso"]
ktor = ["ktor_core", "ktor_okhttp", "ktor_logging", "ktor_res", "ktor_auth", "ktor_content", "ktor_json"]
decompose = ["decompose", "decompose-extensions"]

[plugins]
kotlin-ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize" }

graphfity = { id = "com.github.ivancarras.graphfity", version.ref = "graphfity" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
